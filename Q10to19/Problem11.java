/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
https://projecteuler.net/problem=1
 */

package solutions.Q10to19;

import java.util.stream.LongStream;
import java.util.stream.Stream;

public class Problem11 {
	public static void main(String[] args) {
		System.out.println(findShortDiv());
		//System.out.println(findDiv());
		//Works with a very long runtime
	}
	
	public static long findShortDiv(){
		return Stream.iterate(12250, e -> e + 1)
				     .peek(e -> System.out.println(e*(e+1)/2))
				     .map(e -> e*(e+1)/2)
				     .filter(e -> numberOfDivisors(e) >= 500)
				     .findFirst()
				     .get();
	}

	public static long findDiv(){
		return Stream.iterate(new long[]{1, 2}, e -> new long[]{(e[0] + e[1]), (e[1] + 1)})
						 .peek(e -> System.out.println(e[0] + " " + e[1]))
				  		 .filter(e -> numberOfDivisors(e[0]) >= 500)			  		 
				  		 .findFirst()
				  		 .map(e -> e[0])
				  		 .get();
	}
	
	public static long numberOfDivisors(long num){
		return LongStream.rangeClosed(1, num)
				         .filter(e -> num % e == 0)
				         .count();
	}
}
